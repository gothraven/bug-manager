scalar Date
scalar EmailAddress
scalar PositiveInt

enum Role {
  USER
  DEVELOPER
  ADMIN
}

type User {
  id: ID!
  createdAt: Date!
  updatedAt: Date!
  email: EmailAddress!
  name: String!
  role: Role!
}

type UserCursor {
  edges: [User!]!
  pageInfo: PageInfo!
}

type Query {
  user(id: ID!): User!
  users(after: String, first: PositiveInt): UserCursor
  me: User
}

type Mutation {
  signUp(name: String!, email: EmailAddress!, password: String!): Auth!
  signIn(email: EmailAddress!, password: String!): Auth!
  updateUser(email: EmailAddress!): User!
  deleteUser(id: ID!): Boolean!
}
